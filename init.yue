_ENV = Dorothy builtin.ImGui

App.winSize = Size 620, 850
scriptPath = Path\getScriptPath ...
Content\insertSearchPath 1, scriptPath
Content\insertSearchPath 1, "sfx"
Content\insertSearchPath 1, "Image"
width: viewWidth, height: viewHeight = View.size


const gravity = Vec2 0, -10

updateViewScale = ->
    Director.currentCamera.zoom = View.size.width / 1620
thread -> updateViewScale!
root = with Node!
	\addTo Director.entry
	\gslot "AppSizeChanged", updateViewScale

-- worldScale = viewWidth / 2880
worldScale = 1.0
root.scaleX = worldScale
root.scaleY = worldScale

ui = with Node!
    \addTo Director.ui
    .scaleX = worldScale
    .scaleY = worldScale
heartNode = nil
restartButton = nil
Audio\playStream "sfx/bgm.ogg", true, 0.2

world = with PhysicsWorld!
    \setShouldContact 0, 1, true
    .showDebug = false
    \addTo root

restartGame = nil
cube = nil
touchTheSky = false
isInvincible = false
hardMode = false

getCubeDef = (width, height)-> with BodyDef!
    .type = "Dynamic"
    .linearAcceleration = gravity
    .angularDamping = 1.8
    -- .fixedRotation = true
    \attachPolygon Vec2(0, 0), width, height, 1, 0.4, 0.4

getBlockDef = (width, height)-> with BodyDef!
    .type = "Static"
    .linearAcceleration = gravity
    \attachPolygon Vec2(0, 0), width, height, 1, 0.4, 0.4

colorWhite = Color 0xccffffff
colorRed = Color 0xaae65100
colorBlue = Color 0xaa00b0ff

borderHeight = 19000
borderWidth = 1600
borderPos = Vec2 0, 0

springForce = 1000
heart = 3
cubeInitPos = Vec2(0, 100)

borderDef = with BodyDef!
    .type = "Static"
    \attachPolygon borderPos, borderWidth, 10, 0, 1, 1, 0
    \attachPolygon Vec2(borderPos.x + borderWidth / 2, borderPos.y + borderHeight / 2), 10, borderHeight, 0, 1, 1, 0
    \attachPolygon Vec2(borderPos.x - borderWidth / 2, borderPos.y + borderHeight / 2), 10, borderHeight, 0, 1, 1, 0

destinationDef = with BodyDef!
    \attachPolygonSensor 1, borderWidth, 10

blockLevel = {300, 5200, 9800, 14400}

blocks1 = {
    {200, 200, Vec2(-700, 0), 2},
    {1000, 200, Vec2(300, 400), 0},
    {200, 200, Vec2(500, 800), 1},
    {600, 200, Vec2(-500, 1000), 2},
    {200, 200, Vec2(-300, 1400), 0},
    {200, 200, Vec2(-100, 1600), 0},
    {200, 200, Vec2(-300, 2000), 2},
    {200, 200, Vec2(-500, 2200), 2},
    {200, 200, Vec2(500, 2200), 0},
    {200, 200, Vec2(300, 2400), 0},
    {200, 200, Vec2(500, 2600), 1},
    {200, 200, Vec2(-500, 2800), 0},
    {200, 200, Vec2(-300, 3000), 0},
    {200, 400, Vec2(700, 3100), 0},
    {1200, 200, Vec2(-200, 3600), 2}
}

blocks2 = {
    {200, 1000, Vec2(-300, 0), 2},
    {200, 200, Vec2(300, -200), 1},
    {200, 1000, Vec2(300, 800), 2},
    {200, 200, Vec2(300, 1400), 1},
    {200, 1600, Vec2(-300, 1500), 2},
    {200, 200, Vec2(-500, 2400), 1},
    {200, 1200, Vec2(500, 2500), 0},
    {200, 200, Vec2(-700, 3000), 2},
    {200, 200, Vec2(-500, 3200), 2},
    {200, 200, Vec2(-300, 3400), 2},
    {800, 200, Vec2(400, 4000), 0},
}

blocks3 = {
    {200, 4000, Vec2(-700, 1900), 2},
    {200, 200, Vec2(-100, 400), 2},
    {200, 200, Vec2(100, 600), 1},
    {200, 200, Vec2(300, 1200), 1},
    {200, 200, Vec2(100, 1400), 1},
    {200, 200, Vec2(300, 1800), 1},
    {400, 200, Vec2(600, 2000), 0},
    {200, 200, Vec2(100, 3000), 1},
    {200, 200, Vec2(300, 3200), 1},
    {200, 200, Vec2(300, 3400), 2},
    {200, 200, Vec2(100, 3600), 1},
    {200, 200, Vec2(-100, 3800), 1},
    {400, 200, Vec2(0, 4000), 0},
}

blocks4 = {
    {200, 200, Vec2(-300, 0), 1},
    {200, 200, Vec2(300, 0), 1},
    {200, 200, Vec2(-500, 600), 1},
    {200, 200, Vec2(100, 600), 1},
    {200, 200, Vec2(700, 600), 1},
    {600, 200, Vec2(0, 1200), 0},
    {200, 600, Vec2(700, 1400), 2},
    {200, 1000, Vec2(-700, 1800), 2},
    {200, 600, Vec2(-100, 2200), 2},
    {200, 600, Vec2(500, 2400), 1},
    {200, 200, Vec2(100, 2800), 2},
    {200, 200, Vec2(300, 3000), 2},
    {200, 200, Vec2(-300, 3400), 2},
    {200, 1200, Vec2(500, 3700), 2},
    {200, 800, Vec2(-500, 3900), 2},
    
}

blockBodies = {}

ropeNode = with DrawNode! 
    .scheduler.timeScale = 1.2
isGrabbing = false
isGrabbed = false
grabBlock = Node!

emitRope = (cubeBody, endPoint)->
    ropeNode\removeAllChildren!
    startPoint = cubeBody.position
    curEndPoint = startPoint
    isBlock = false
    isSelf = true
    grabPoint = endPoint
    Audio\play "sfx/slime_touch.wav"
    world\raycast startPoint, endPoint, false, (body, point)->
        if isBlock
            isGrabbed = true
            grabPoint = point
            isBlock = false
        if isSelf
            isSelf = false
            isBlock = true
    with ropeNode
        \schedule ->
            \clear!
            -- dis = grabPoint\distance startPoint
            -- dir = grabPoint - startPoint
            -- dir = dir\normalize! * 0.0001 * dis
            -- curDis = curEndPoint\distance grabPoint
            -- if curDis > 40
            --     curEndPoint = curEndPoint + dir * dis
            \drawSegment cubeBody.position, grabPoint, 10, Color 0xaaffffff
        \addTo root


getGrabForce = (body, target)->
    prePos = body.position
    force = (target - prePos)
    force = force\normalize! * 30
    return force


camera = Camera2D!
Director\pushCamera camera

cameraFollow = (body)-> 
    with Node!
        \schedule ->
            camera.position = Vec2 0, (body.position.y + 200) * worldScale
        \addTo Director.entry

addCube = ->
    cube = with Node!
        \addTo world
    scale = 0.5
    cubebody = with Body getCubeDef(256*scale, 256*scale), world, cubeInitPos
        .receivingContact = true
        .tag = "cubeBody"
        .group = 0
        .angularRate = 0
        .velocity = Vec2.zero
        \addChild with Sprite "Image/cube.png"
            .scaleX = scale
            .scaleY = scale
        \addTo cube
    cameraFollow cubebody

addHeartUI = ->
    -- heartNode = with Node!
    --     \addChild with Sprite "Image/heart_3.png"
    --         .tag = "heartSprite"
    --         .y = viewHeight/2 - 100
    --         .scaleX = 6
    --         .scaleY = 6
    -- ui\addChild heartNode

loseHeart = ->
    heart = heart - 1
    -- heartNode\removeAllChildren!
    -- heaetSprite = nil
    -- switch heart
    --     when 0
    --         heaetSprite = Sprite "Image/heart_0.png"
    --     when 1
    --         heaetSprite = Sprite "Image/heart_1.png"
    --     when 2
    --         heaetSprite = Sprite "Image/heart_2.png"
    --     when 3
    --         heaetSprite = Sprite "Image/heart_3.png"
    --     else
    --         heaetSprite = Sprite "Image/heart_0.png"
    -- heartNode\addChild with heaetSprite
    --     .tag = "heartSprite"
    --     .y = viewHeight/2 - 100
    --     .scaleX = 6
    --     .scaleY = 6

arriveDest = ->
    touchTheSky = true
    Audio\play "sfx/sky3.mp3"
    Audio\playStream "sfx/victory.ogg", true, 0.2
    body = cube\getChildByTag "cubeBody"
    body\applyLinearImpulse Vec2(0, 1500), body.position
    restartButton = with Node!
        \addChild with Sprite "Image/restart.png"
            .scaleX = 2
            .scaleY = 2
            .touchEnabled = true
            \slot "TapBegan", ()->
                restartButton\removeFromParent!
                restartGame!
        \addTo ui
        -- \addChild with Label "sarasa-mono-sc-regular", 100
        --     .alignment = "Left"
        --     -- .textWidth = width - fontSize
        --     .text = "TOUCH THE SKY!"



buildBlocks = (index)->
    blocks = nil
    switch index
        when 1
            blocks = blocks1
        when 2
            blocks = blocks2
        when 3
            blocks = blocks3
        when 4
            blocks = blocks4
    for block in *blocks
        width = block[1]
        height = block[2]
        pos = block[3] + Vec2(0, blockLevel[index])
        blockType = block[4]
        table.insert blockBodies, with Body getBlockDef(width, height), world, pos
            .group = 1
            blockColor = Color 0xffffffff
            \attachSensor 1, BodyDef\polygon width+15, height+15
            switch blockType
                when 0
                    \slot "BodyEnter", ()->
                        Audio\play "sfx/strike.wav"
                    blockColor = colorWhite
                when 1
                    \slot "BodyEnter", (body)->
                        if not isInvincible
                            loseHeart!
                            body\applyLinearImpulse Vec2(math.random(-1000, 1000),math.random(-1000, -500)), body.position
                            Audio\play "sfx/explode2.wav"
                        -- print "heart:" .. heart
                        \schedule once ->
                                isInvincible = true
                                sleep 1
                                isInvincible = false
                        if heart == 0
                            Audio\play "sfx/game_over.wav"
                            \schedule once ->
                                sleep 0.5
                                restartGame!
                    blockColor = colorRed
                    \addChild with Sprite "Image/red.png"
                        .scaleX = 0.15
                        .scaleY = 0.15
                when 2
                    blockColor = colorBlue
                    \addChild with Sprite "Image/spring.png"
                        .scaleX = 0.15
                        .scaleY = 0.15
                    \slot "BodyEnter", (body)->
                        Audio\play "sfx/rebound.wav"
                        body\applyLinearImpulse Vec2(0, springForce), body.position
            \addChild with DrawNode!
                        verts = {
                            Vec2 -width / 2, height / 2,
                            Vec2 width / 2, height / 2,
                            Vec2 width / 2, -height / 2,
                            Vec2 -width / 2, -height / 2
                        }
                        \drawPolygon verts, blockColor
            \addTo world

buildWorld = ->
    buildBlocks 1
    buildBlocks 2
    buildBlocks 3
    buildBlocks 4
    with Body destinationDef, world, Vec2(borderPos.x, borderPos.y + borderHeight)
        .group = 1
        \addChild with Sprite "Image/sky.png"
            .x = 90
            .y = 100
            .scaleX = 2.7
            .scaleY = 2.7
        \slot "BodyEnter", ()->
            arriveDest! if not touchTheSky
        \addTo world
    with Body borderDef, world, Vec2.zero
        .group = 1
        \addChild with DrawNode!
            \drawSegment Vec2(-borderWidth/2, 0), Vec2(borderWidth/2, 0), 10, colorWhite
            \drawSegment Vec2(-borderWidth/2, 0), Vec2(-borderWidth/2, borderHeight), 10, colorWhite
            \drawSegment Vec2(borderWidth/2, 0), Vec2(borderWidth/2, borderHeight), 10, colorWhite
        \addTo world
    with Node!
        .touchEnabled = true
        \slot "TapBegan", (touch)->
            isGrabbing = true
            return unless touch.first
            :location = touch
            body = cube\getChildByTag "cubeBody"
            emitRope(body, location)
            if not hardMode or isGrabbed
                with grabBlock
                    \schedule ->
                        body\applyLinearImpulse getGrabForce(body, location), body.position
                    \addTo Director.entry
        \slot "TapEnded", ->
            isGrabbing = false
            isGrabbed = false
            grabBlock\removeFromParent!
            ropeNode\clear!
            ropeNode\removeFromParent!
        \addTo root

addCube!
buildWorld!
addHeartUI!

restartGame = ->
    -- print "Restart"
    width: viewWidth, height: viewHeight = View.size
    if touchTheSky
        Audio\playStream "sfx/bgm.ogg", true, 0.2
    heart = 3
    touchTheSky = false
    body = cube\getChildByTag "cubeBody"
    body.position = Vec2 0, 0
    body.angularRate = 0
    -- ui\removeFromParent!
    -- ui = with Node!
    --     \addTo Director.ui
    -- heartNode\removeFromParent!
    addHeartUI!

Director.entry\addChild with Node!
    windowFlags =
        * "NoDecoration"
        * "AlwaysAutoResize"
        * "NoSavedSettings"
        * "NoFocusOnAppearing"
        * "NoNav"
        * "NoMove"
    \schedule ->
        const :width = App.visualSize
        const :height = App.visualSize
        SetNextWindowBgAlpha 0.35
        SetNextWindowPos Vec2(width - 240, height - 150), "Always", Vec2 0, 0
        SetNextWindowSize Vec2(240, 0), "FirstUseEver"
        Begin "Touch The Sky", windowFlags, ->
            Text "Touch The Sky"
            Separator!
            TextWrapped "You can click or hold the mouse to grab."
            if changed, isHardMode = Checkbox "Hard Mode", hardMode
                hardMode = isHardMode